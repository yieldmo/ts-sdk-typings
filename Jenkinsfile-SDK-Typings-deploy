pipeline
{
    options
    {
        buildDiscarder(logRotator(numToKeepStr: '20'))
		disableConcurrentBuilds()
    }
    agent
	{
		label 'linux-ubuntu-agent'
	}
    tools {
        nodejs 'Node 8.10' 
    }
    stages
    {
		stage('Run the deployment')
		{
			steps
			{
				script
				{
                sh "node -v"
                def tagName = GIT_TAG_NAME_PARAMETER ?: GIT_TAG_NAME
                sh "env"
                // check out the tag we have at this point
                sh """
                    git checkout ${GIT_TAG_NAME_PARAMETER}
                """
                // git pull origin ${env.GIT_TAG_NAME_PARAMETER}:-${env.GIT_TAG_NAME}
                sh """
                    set +e
                        npm version ${GIT_TAG_NAME_PARAMETER}-B${BUILD_NUMBER}
                    set -e
                """
                sh "npm publish"
				}
			}
		}
    }
    post 
    {
        always
        {
			//Execute post steps. Always clean up after a build!
            sh "ls"
            sh "sudo apt --auto-remove -y purge npm"
        }
        success {
            updateGitlabCommitStatus name: 'build', state: 'success'
            sh "env"
            mail to: 'formats@yieldmo.com',
                subject: "Pipeline ${currentBuild.fullDisplayName} executed Succesfully",
                body: "The pipeline ${env.JOB_NAME} executed Succesfully (<${env.BUILD_URL}|Open>)"                   
        }
        failure {
            echo 'This will run only if the run was marked as failure'
            updateGitlabCommitStatus name: 'build', state: 'failed'
        }
        unstable {
            echo 'This will run only if the run was marked as unstable'
        }
        changed {
            echo 'This will run only if the state of the Pipeline has changed'
            echo 'For example, if the Pipeline was previously failing but is now successful'
        }
    }
}